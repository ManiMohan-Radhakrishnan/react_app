{"version":3,"sources":["components/change-password/index.js","pages/reset-password.js"],"names":["ChangePassword","location","useLocation","dispatch","useDispatch","resetPasswordToken","useQuery","search","get","useState","success","setSuccess","loading","setLoading","error","setError","password","password_confirmation","validation","setValidation","reset_password_token","valid_password","valid_password_confirmation","input","setInput","setPassword","confirmPassword","setConfirmPassword","useEffect","user_logout_thunk","TokenExpiredMessage","className","to","handleSubmit","a","checkValidation","resetPasswordApi","result","status","toast","console","log","c_validation","validatePassword","handleChangeEvent","e","target","name","value","handleKeyPressEvent","event","key","src","guardian_logo","role","onClick","openWindowBlank","process","title","type","required","onChange","onKeyPress","isPop","popText","disabled","ResetPassword"],"mappings":"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","file":"static/js/16.897c2e7f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch } from \"react-redux\";\n\nimport InputText from \"../input-text\";\nimport Wrapper from \"../wrapper\";\nimport { useQuery } from \"./../../hooks/url-params\";\nimport { validatePassword } from \"./../../utils/common\";\nimport { resetPasswordApi } from \"../../api/methods\";\nimport { user_logout_thunk } from \"../../redux/thunk/user_thunk\";\n\nimport guardian_logo from \"../../images/jump-trade/guardianLinkLogo.png\";\n\nimport { openWindowBlank } from \"./../../utils/common\";\n\nimport \"./style.scss\";\n\nconst ChangePassword = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const query = useQuery(location.search);\n  const resetPasswordToken = query.get(\"reset_password_token\");\n\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [validation, setValidation] = useState({\n    password: false,\n    password_confirmation: false,\n  });\n  const [input, setInput] = useState({\n    reset_password_token: resetPasswordToken,\n    password: false,\n    valid_password: false,\n    password_confirmation: false,\n    valid_password_confirmation: false,\n  });\n\n  const [password, setPassword] = useState(true);\n  const [confirmPassword, setConfirmPassword] = useState(true);\n\n  useEffect(() => {\n    dispatch(user_logout_thunk());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const TokenExpiredMessage = () => {\n    return (\n      <>\n        <p className=\"error_text text-center\">\n          Your password reset token has expired. We have this expiry limit in\n          the interest of your account security! <br />\n          <br /> You can re-attempt to reset your password by{\" \"}\n          <Link to=\"/forgot-password\">clicking here.</Link>\n        </p>\n      </>\n    );\n  };\n\n  const handleSubmit = async () => {\n    if (checkValidation()) {\n      try {\n        setLoading(true);\n        const result = await resetPasswordApi(input);\n\n        setLoading(false);\n        if (result.status === 200) {\n          setSuccess(true);\n        }\n      } catch (err) {\n        if (err?.status === 422) {\n          // toast.error(\"Reset password token expired, please try again\");\n          setError(\"token-expired\");\n        } else {\n          toast.error(\"An unexpected error occured. Please try again \");\n          console.log(\n            \"ðŸš€ ~ file: index.js ~ line 106 ~ handleSignUp ~ err\",\n            err\n          );\n        }\n\n        setLoading(false);\n      }\n    }\n  };\n\n  const checkValidation = () => {\n    let c_validation = { ...validation };\n\n    if (!input.password) {\n      c_validation = { ...c_validation, password: true };\n    } else {\n      if (validatePassword(input.password)) {\n        c_validation = { ...c_validation, valid_password: false };\n      } else {\n        c_validation = { ...c_validation, valid_password: true };\n      }\n    }\n    if (!input.password_confirmation) {\n      c_validation = { ...c_validation, password_confirmation: true };\n    } else {\n      if (input.password === input.password_confirmation) {\n        c_validation = { ...c_validation, valid_password_confirmation: false };\n      } else {\n        c_validation = { ...c_validation, valid_password_confirmation: true };\n      }\n    }\n\n    setValidation(c_validation);\n    if (\n      !c_validation.password &&\n      !c_validation.password_confirmation &&\n      !c_validation.valid_password &&\n      !c_validation.valid_password_confirmation\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleChangeEvent = (e) => {\n    setInput({ ...input, [e.target.name]: e.target.value });\n    if (e.target.value) {\n      setValidation({\n        ...validation,\n        [e.target.name]: false,\n        [`valid_${e.target.name}`]: false,\n      });\n    } else {\n      setValidation({\n        ...validation,\n        [e.target.name]: true,\n        [`valid_${e.target.name}`]: false,\n      });\n    }\n  };\n\n  const handleKeyPressEvent = (event) => {\n    if (event.key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <>\n      <Wrapper>\n        {success ? (\n          <div className=\"bl_form_box\">\n            <div className=\"log_top\">\n              <div className=\"login_logos\">\n                <a>\n                  <img\n                    src={guardian_logo}\n                    role=\"button\"\n                    onClick={() =>\n                      openWindowBlank(process.env.REACT_APP_GUARDIAN_URL)\n                    }\n                  />\n                </a>\n              </div>\n            </div>\n            <div className=\"form-cntnt-box\">\n              <h4>Password Changed Successfully</h4>\n              <p className=\"mb-4\">\n                Please <Link to=\"/signin\"> login </Link> to continue{\" \"}\n              </p>\n            </div>\n          </div>\n        ) : (\n          <div className=\"bl_form_box\">\n            <div className=\"log_top\">\n              <div className=\"login_logos\">\n                <a>\n                  <img\n                    src={guardian_logo}\n                    role=\"button\"\n                    onClick={() =>\n                      openWindowBlank(process.env.REACT_APP_GUARDIAN_URL)\n                    }\n                  />\n                </a>\n              </div>\n            </div>\n            <div className=\"form-cntnt-box\">\n              <h4> Change Password</h4>\n              <div className=\"form-group mb-2 float-icon\">\n                <InputText\n                  title=\"New Password\"\n                  type={password ? \"password\" : \"text\"}\n                  required={validation.password}\n                  name=\"password\"\n                  onChange={handleChangeEvent}\n                  onKeyPress={handleKeyPressEvent}\n                  isPop\n                  popText=\"Your password should have a minimum of 6 characters, and should\n                include an uppercase letter and a number.\"\n                />\n                {!password ? (\n                  <FaEyeSlash\n                    role=\"button\"\n                    className=\"eye\"\n                    onClick={() => setPassword(!password)}\n                  />\n                ) : (\n                  <FaEye\n                    role=\"button\"\n                    className=\"eye\"\n                    onClick={() => setPassword(!password)}\n                  />\n                )}\n              </div>\n              {validation.valid_password && (\n                <p className=\"error_text my-1\">\n                  Your password does not comply with our password policy.\n                </p>\n              )}\n              <div className=\"form-group mb-2 float-icon\">\n                <InputText\n                  title=\"Confirm New Password\"\n                  type={confirmPassword ? \"password\" : \"text\"}\n                  required={validation.password_confirmation}\n                  name=\"password_confirmation\"\n                  onChange={handleChangeEvent}\n                  onKeyPress={handleKeyPressEvent}\n                />\n                {!confirmPassword ? (\n                  <FaEyeSlash\n                    role=\"button\"\n                    className=\"eye\"\n                    onClick={() => setConfirmPassword(!confirmPassword)}\n                  />\n                ) : (\n                  <FaEye\n                    role=\"button\"\n                    className=\"eye\"\n                    onClick={() => setConfirmPassword(!confirmPassword)}\n                  />\n                )}\n              </div>\n              {validation.valid_password_confirmation && (\n                <p className=\"error_text my-1\">Password doesn't match</p>\n              )}\n              <div className=\"form-group mb-2\">\n                <button\n                  disabled={loading}\n                  type=\"button\"\n                  className=\"btn btn-dark w-100\"\n                  onClick={handleSubmit}\n                >\n                  Change password\n                </button>\n                {(() => {\n                  if (error === \"token-expired\") {\n                    return <TokenExpiredMessage />;\n                  } else {\n                    return <p className=\"error_text text-center\">{error}</p>;\n                  }\n                })()}\n                {/* <button className=\"bl_btn bl_btn_border\">Cancel</button> */}\n              </div>\n            </div>\n          </div>\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ChangePassword;\n","import React from \"react\";\n\nimport ChangePassword from \"./../components/change-password\";\nimport Header2 from \"../components/header2\";\n\nconst ResetPassword = () => {\n  return (\n    <>\n      <Header2 />\n      <ChangePassword />\n    </>\n  );\n};\n\nexport default ResetPassword;\n"],"sourceRoot":""}